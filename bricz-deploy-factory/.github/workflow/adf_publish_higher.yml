# This is a basic workflow to help you deploy an ADF ARM template to a higher environment

# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

on:
  push:
    branches:
      - adf_publish_higher
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: 'Publish to ADF Environment'
    env:
      FACTORY_NAME: bricz-higher-environment  # Define the factory name as an environment variable
      TRIGGER_SCOPE: /subscriptions/becdcd32-aa6e-405f-b13f-ff22db8180e6/resourceGroups/function-grp/providers/Microsoft.Storage/storageAccounts/myfunction3428fb8

    steps:
    - uses: actions/checkout@v3

    - name: Azure Login
      uses: Azure/login@v1.4.3
      with:
        # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
        creds: ${{secrets.AZURE_CREDENTIALS}}

    - name: Stop All ADF Triggers
      run: |
        triggers=$(az datafactory trigger list --resource-group rg-qa-001 --factory-name $FACTORY_NAME --query "[].name" -o tsv)
        for trigger in $triggers; do
          az datafactory trigger stop --resource-group rg-qa-001 --factory-name $FACTORY_NAME --trigger-name $trigger
        done

    - name: Deploy Azure Resource Manager (ARM) Template
      uses: Azure/arm-deploy@v1.0.6
      with:
        # Provide the scope of the deployment. Valid values are: 'resourcegroup', 'managementgroup', 'subscription'
        scope: 'resourcegroup'
        # Target resource group of the deployment.
        resourceGroupName: rg-qa-001
        # Specify the path to the ADF ARM template. In this scenario, the workflow is in the same branch, 
        # hence we only add the folder and arm template name to the path
        template: ./bricz-etl/ARMTemplateForFactory.json
        # Incremental (only add resources to resource group) or Complete (remove extra resources from resource group) or Validate (only validates the template).
        deploymentMode: Incremental
        # Supply deployment parameter values. In this simple scenario, 
        # I am only passing the name of the target ADF to which this is being deployed
        parameters: ./bricz-etl/ARMTemplateParametersForFactory.json factoryName=${{env.FACTORY_NAME}} briczkeyvault_properties_typeProperties_baseUrl=https://keyvault-qa-eastus-001.vault.azure.net/ datalakelinkedservice_properties_typeProperties_url=https://stqadatapipe001.dfs.core.windows.net import_manager_demand_forecast_properties_typeProperties_scope=${{env.TRIGGER_SCOPE}} import_manager_fulfillment_forecast_properties_typeProperties_scope=${{env.TRIGGER_SCOPE}} import_manager_location_staffing_properties_typeProperties_scope=${{env.TRIGGER_SCOPE}} import_manager_current_backlog_properties_typeProperties_scope=${{env.TRIGGER_SCOPE}} import_manager_location_properties_typeProperties_scope=${{env.TRIGGER_SCOPE}} import_manager_inventory_properties_typeProperties_scope=${{env.TRIGGER_SCOPE}} sftp_upload_order_history_properties_typeProperties_scope=${{env.TRIGGER_SCOPE}} sftp_upload_shipment_history_properties_typeProperties_scope=${{env.TRIGGER_SCOPE}} sftp_upload_item_master_properties_typeProperties_scope=${{env.TRIGGER_SCOPE}} 

    - name: Start All ADF Triggers
      run: |
        triggers=$(az datafactory trigger list --resource-group rg-qa-001 --factory-name $FACTORY_NAME --query "[].name" -o tsv)
        for trigger in $triggers; do
          az datafactory trigger start --resource-group rg-qa-001 --factory-name $FACTORY_NAME --trigger-name $trigger
        done
